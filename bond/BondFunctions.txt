Bond网口属性：

    网口名称vbond0
    绑定物理网卡个数及名称 vEth0 vEth1 ...
    Bond模式及对应的参数 mode=0 BONDING_MODE_ROUND_ROBIN
    IP 192.169.52.1
    Mac地址 aa:aa:aa:aa:aa:aa
    Bond网口Index号 1

查询Bond网口

创建Bond网口
    
    获取要被绑定的物理网口的ID号

    对物理网口进行设定: rte_eth_dev_configure(portid, 1, 1, &port_conf)
                               rte_eth_rx_queue_setup(portid, 0, RTE_RX_DESC_DEFAULT,
                                                              rte_eth_dev_socket_id(portid), NULL,
                                                              mbuf_pool);
                               rte_eth_tx_queue_setup(portid, 0, RTE_TX_DESC_DEFAULT,
                                                              rte_eth_dev_socket_id(portid), NULL);
                               rte_eth_dev_start(portid);
                               rte_eth_macaddr_get(portid, &addr);

    创建Bond网口:rte_eth_bond_create("vbond0", BONDING_MODE_ALB,0 );

    设置Bond网口:rte_eth_dev_configure(BOND_PORT, 1, 1, &port_conf)
                      rte_eth_rx_queue_setup(BOND_PORT, 0, RTE_RX_DESC_DEFAULT,
                                                    rte_eth_dev_socket_id(BOND_PORT), NULL,
                                                    mbuf_pool);
                      rte_eth_tx_queue_setup(BOND_PORT, 0, RTE_TX_DESC_DEFAULT,
                                                    rte_eth_dev_socket_id(BOND_PORT), NULL);
                      
    绑定物理网卡到Bond网口中:rte_eth_bond_slave_add(BOND_PORT, slaves[i])

    启动Bond网口:rte_eth_dev_start(BOND_PORT);
                      rte_eth_promiscuous_enable(BOND_PORT);
                      rte_eth_macaddr_get(BOND_PORT, &addr);

删除Bond网口

修改Bond网口

网口查找：
struct rte_eth_dev *rte_eth_dev_allocated(const char *name);

增加，删除，修改：
int rte_eth_bond_create (const char *name, uint8_t mode, uint8_t socket_id)
int rte_eth_bond_free (const char *name)
int rte_eth_bond_slave_add (uint8_t bonded_port_id, uint8_t slave_port_id)
int rte_eth_bond_slave_remove (uint8_t bonded_port_id, uint8_t slave_port_id)
int rte_eth_bond_mode_set (uint8_t bonded_port_id, uint8_t mode)
int rte_eth_bond_primary_set (uint8_t bonded_port_id, uint8_t slave_port_id)
int rte_eth_bond_mac_address_set (uint8_t bonded_port_id, struct ether_addr *mac_addr)
int rte_eth_bond_mac_address_reset (uint8_t bonded_port_id)
int rte_eth_bond_xmit_policy_set (uint8_t bonded_port_id, uint8_t policy)
int rte_eth_bond_link_monitoring_set (uint8_t bonded_port_id, uint32_t internal_ms)
int rte_eth_bond_link_down_prop_delay_set (uint8_t bonded_port_id, uint32_t delay_ms)
int rte_eth_bond_link_up_prop_delay_set (uint8_t bonded_port_id, uint32_t delay_ms)

已知Bond网口ID号的前提下查询：
int rte_eth_bond_mode_get (uint8_t bonded_port_id)
int rte_eth_bond_primary_get (uint8_t bonded_port_id)
int rte_eth_bond_slaves_get (uint8_t bonded_port_id, uint8_t slaves[], uint8_t len)
int rte_eth_bond_active_slaves_get (uint8_t bonded_port_id, uint8_t slaves[], uint8_t len)
int rte_eth_bond_xmit_policy_get (uint8_t bonded_port_id)
int rte_eth_bond_link_monitoring_get (uint8_t bonded_port_id)
int rte_eth_bond_link_down_prop_delay_get (uint8_t bonded_port_id)
int rte_eth_bond_link_up_prop_delay_get (uint8_t bonded_port_id)
